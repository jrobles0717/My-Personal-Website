// MEDIA QUERY MANAGER
/* 
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800]   is where our normal styles apply
1800 + :        Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + Typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content; // 600px
    }
  }
  @if $breakpoint == tab-port-sm {
    @media only screen and (max-width: 46.875em) {
      @content; // 750px
    }
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content; // 900px
    }
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content; // 1200px
    }
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content; // 1800px
    }
  }
}

// Hero Container
@mixin grid-10x7 {
  display: grid;
  grid-template-columns:
    [full-start] minmax(10rem, 1fr) [center-start] repeat(
      8,
      [col-start] minmax(min-content, 10rem) [col-end]
    )
    [center-end] minmax(6rem, 1fr) [full-end];
  grid-template-rows:
    6rem repeat(5, minmax(min-content, max-content))
    minmax(6rem, 1fr);

  @include respond(tab-port) {
    grid-template-rows:
      25vh repeat(5, minmax(min-content, max-content))
      minmax(6rem, 1fr);
  }
  @include respond(tab-port-sm) {
    grid-template-rows:
      25vh repeat(5, minmax(min-content, max-content))
      minmax(6rem, 1fr);
  }

  @include respond(phone) {
    grid-template-rows:
      25vh repeat(5, minmax(min-content, max-content))
      minmax(6rem, 1fr);
  }
}

// About Container
@mixin grid-4x6 {
  display: grid;
  grid-template-columns:
    [full-start] minmax(6rem, 1fr) [center-start] repeat(
      2,
      [col-start] minmax(min-content, max-content) [col-end]
    )
    [center-end] minmax(6rem, 1fr) [full-end];
  grid-template-rows: minmax(6rem, 1fr) repeat(5, min-content);
}

@mixin grid-1x4 {
  display: grid;
  grid-template-columns: 40vw;
  grid-template-rows: repeat(4, min-content);

  @include respond(tab-port-sm) {
    grid-template-columns: 1fr;
  }
}

// Experience Container
@mixin grid-4x3 {
  display: grid;
  grid-template-columns:
    [full-start] minmax(6rem, 1fr) [center-start] repeat(
      2,
      [col-start] minmax(min-content, max-content) [col-end]
    )
    [center-end] minmax(6rem, 1fr) [full-end];
  grid-template-rows: minmax(6rem, 1fr) repeat(2, min-content);
}

@mixin grid-2x1 {
  display: grid;
  // grid-template-columns: repeat(2, minmax(min-content, max-content));
  grid-template-columns: max-content 45vw;

  @include respond(tab-port) {
    grid-template-columns: max-content 55vw;
  }

  @include respond(phone) {
    grid-template-columns: 80vw;
    grid-template-rows: 5rem max-content;
  }
}

// Projects Container
@mixin grid-4x5 {
  display: grid;
  grid-template-columns:
    [full-start] minmax(6rem, 1fr) [center-start] repeat(
      2,
      [col-start] minmax(min-content, max-content) [col-end]
    )
    [center-end] minmax(6rem, 1fr) [full-end];
  grid-template-rows:
    minmax(6rem, 1fr) max-content minmax(min-content, max-content)
    max-content minmax(min-content, max-content);
}

@mixin grid-2x1--projects {
  display: grid;
  grid-template-columns: 1fr 1fr;
}

@mixin grid-1x5 {
  display: grid;
  grid-template-rows: repeat(5, minmax(min-content, max-content));

  @include respond(tab-port) {
    grid-template-columns: repeat(2, 1fr);
  }
}

// Projects Container Cards
@mixin grid-6x1 {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(30rem, 1fr));
}

@mixin grid-1x2 {
  display: grid;
  grid-template-rows: repeat(2, minmax(min-content, max-content));
}

@mixin grid-1x3 {
  display: grid;
  grid-template-rows: repeat(3, minmax(min-content, max-content));
}

// Contact container
@mixin grid-3x6 {
  display: grid;
  grid-template-columns: minmax(6rem, 1fr) minmax(min-content, 50rem) minmax(
      6rem,
      1fr
    );
  grid-template-rows: minmax(6rem, 1fr) repeat(
      5,
      minmax(min-content, max-content)
    );
}

// Footer container
@mixin grid-3x2 {
  display: grid;
  grid-template-columns: minmax(6rem, 1fr) minmax(min-content, max-content) minmax(
      6rem,
      1fr
    );
}

@mixin hyphens {
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}
